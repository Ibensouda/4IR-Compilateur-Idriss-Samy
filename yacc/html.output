Terminals unused in grammar

    tAND
    tOR
    tNOT
    tERROR


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program fonc_declaration

    3 return_statement: tRETURN tNB tSEMI
    4                 | tRETURN tID tSEMI

    5 print_statement: tPRINT expression tSEMI

    6 $@1: ε

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE instructions tRBRACE

    8 $@2: ε

    9 if_statement: if_statement tELSE $@2 tLBRACE instructions tRBRACE

   10 $@3: ε

   11 while_statement: tWHILE $@3 tLPAR expression tRPAR tLBRACE instructions tRBRACE

   12 print_statement: tPRINT tLPAR tID tRPAR tSEMI
   13                | tPRINT tLPAR tNB tRPAR tSEMI

   14 int_declaration: tINT int_declaration tSEMI
   15                | tINT int_declaration tASSIGN arith tSEMI

   16 $@4: ε

   17 int_declaration: tID $@4 tCOMMA int_declaration
   18                | tID

   19 int_assignment: tID tASSIGN arith tSEMI

   20 $@5: ε

   21 fonc_declaration: tINT tID $@5 tLPAR params tRPAR tLBRACE instructions return_statement tRBRACE

   22 $@6: ε

   23 fonc_declaration: tVOID tID $@6 tLPAR params tRPAR tLBRACE instructions tRBRACE

   24 instructions: if_statement
   25             | while_statement
   26             | print_statement
   27             | int_declaration
   28             | int_assignment
   29             | if_statement instructions
   30             | while_statement instructions
   31             | print_statement instructions
   32             | int_declaration instructions
   33             | int_assignment instructions

   34 params: tVOID
   35       | tINT tID tCOMMA params
   36       | tVOID tID tCOMMA params
   37       | tINT tID
   38       | tVOID tID

   39 arith: arith tADD arith
   40      | arith tSUB arith
   41      | arith tMUL arith
   42      | arith tDIV arith
   43      | tID
   44      | tID tLPAR args tRPAR
   45      | tNB

   46 expression: expression tEQ expression
   47           | expression tCOMMA expression
   48           | expression tLE expression
   49           | expression tGE expression
   50           | expression tNE expression
   51           | expression tLT expression
   52           | expression tGT expression
   53           | tID
   54           | tNB

   55 args: arith
   56     | arith tCOMMA args


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tINT (258) 14 15 21 35 37
    tIF (259) 7
    tWHILE (260) 11
    tELSE (261) 9
    tADD (262) 39
    tSUB (263) 40
    tEQ (264) 46
    tLBRACE (265) 7 9 11 21 23
    tRBRACE (266) 7 9 11 21 23
    tLPAR (267) 7 11 12 13 21 23 44
    tRPAR (268) 7 11 12 13 21 23 44
    tSEMI (269) 3 4 5 12 13 14 15 19
    tPRINT (270) 5 12 13
    tRETURN (271) 3 4
    tVOID (272) 23 34 36 38
    tMUL (273) 41
    tDIV (274) 42
    tLT (275) 51
    tGT (276) 52
    tNE (277) 50
    tGE (278) 49
    tLE (279) 48
    tASSIGN (280) 15 19
    tAND (281)
    tOR (282)
    tNOT (283)
    tCOMMA (284) 17 35 36 47 56
    tERROR (285)
    tID <s> (286) 4 12 17 18 19 21 23 35 36 37 38 43 44 53
    tNB <n> (287) 3 13 45 54


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program (34)
        on left: 1 2
        on right: 0 2
    return_statement (35)
        on left: 3 4
        on right: 21
    print_statement (36)
        on left: 5 12 13
        on right: 26 31
    if_statement (37)
        on left: 7 9
        on right: 9 24 29
    $@1 (38)
        on left: 6
        on right: 7
    $@2 (39)
        on left: 8
        on right: 9
    while_statement (40)
        on left: 11
        on right: 25 30
    $@3 (41)
        on left: 10
        on right: 11
    int_declaration (42)
        on left: 14 15 17 18
        on right: 14 15 17 27 32
    $@4 (43)
        on left: 16
        on right: 17
    int_assignment (44)
        on left: 19
        on right: 28 33
    fonc_declaration (45)
        on left: 21 23
        on right: 2
    $@5 (46)
        on left: 20
        on right: 21
    $@6 (47)
        on left: 22
        on right: 23
    instructions (48)
        on left: 24 25 26 27 28 29 30 31 32 33
        on right: 7 9 11 21 23 29 30 31 32 33
    params (49)
        on left: 34 35 36 37 38
        on right: 21 23 35 36
    arith (50)
        on left: 39 40 41 42 43 44 45
        on right: 15 19 39 40 41 42 55 56
    expression (51)
        on left: 46 47 48 49 50 51 52 53 54
        on right: 5 7 11 46 47 48 49 50 51 52
    args (52)
        on left: 55 56
        on right: 44 56


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • fonc_declaration

    $end   shift, and go to state 2
    tINT   shift, and go to state 3
    tVOID  shift, and go to state 4

    fonc_declaration  go to state 5


State 2

    0 $accept: program $end •

    $default  accept


State 3

   21 fonc_declaration: tINT • tID $@5 tLPAR params tRPAR tLBRACE instructions return_statement tRBRACE

    tID  shift, and go to state 6


State 4

   23 fonc_declaration: tVOID • tID $@6 tLPAR params tRPAR tLBRACE instructions tRBRACE

    tID  shift, and go to state 7


State 5

    2 program: program fonc_declaration •

    $default  reduce using rule 2 (program)


State 6

   21 fonc_declaration: tINT tID • $@5 tLPAR params tRPAR tLBRACE instructions return_statement tRBRACE

    $default  reduce using rule 20 ($@5)

    $@5  go to state 8


State 7

   23 fonc_declaration: tVOID tID • $@6 tLPAR params tRPAR tLBRACE instructions tRBRACE

    $default  reduce using rule 22 ($@6)

    $@6  go to state 9


State 8

   21 fonc_declaration: tINT tID $@5 • tLPAR params tRPAR tLBRACE instructions return_statement tRBRACE

    tLPAR  shift, and go to state 10


State 9

   23 fonc_declaration: tVOID tID $@6 • tLPAR params tRPAR tLBRACE instructions tRBRACE

    tLPAR  shift, and go to state 11


State 10

   21 fonc_declaration: tINT tID $@5 tLPAR • params tRPAR tLBRACE instructions return_statement tRBRACE

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 14


State 11

   23 fonc_declaration: tVOID tID $@6 tLPAR • params tRPAR tLBRACE instructions tRBRACE

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 15


State 12

   35 params: tINT • tID tCOMMA params
   37       | tINT • tID

    tID  shift, and go to state 16


State 13

   34 params: tVOID •
   36       | tVOID • tID tCOMMA params
   38       | tVOID • tID

    tID  shift, and go to state 17

    $default  reduce using rule 34 (params)


State 14

   21 fonc_declaration: tINT tID $@5 tLPAR params • tRPAR tLBRACE instructions return_statement tRBRACE

    tRPAR  shift, and go to state 18


State 15

   23 fonc_declaration: tVOID tID $@6 tLPAR params • tRPAR tLBRACE instructions tRBRACE

    tRPAR  shift, and go to state 19


State 16

   35 params: tINT tID • tCOMMA params
   37       | tINT tID •

    tCOMMA  shift, and go to state 20

    $default  reduce using rule 37 (params)


State 17

   36 params: tVOID tID • tCOMMA params
   38       | tVOID tID •

    tCOMMA  shift, and go to state 21

    $default  reduce using rule 38 (params)


State 18

   21 fonc_declaration: tINT tID $@5 tLPAR params tRPAR • tLBRACE instructions return_statement tRBRACE

    tLBRACE  shift, and go to state 22


State 19

   23 fonc_declaration: tVOID tID $@6 tLPAR params tRPAR • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 23


State 20

   35 params: tINT tID tCOMMA • params

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 24


State 21

   36 params: tVOID tID tCOMMA • params

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 25


State 22

   21 fonc_declaration: tINT tID $@5 tLPAR params tRPAR tLBRACE • instructions return_statement tRBRACE

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 36


State 23

   23 fonc_declaration: tVOID tID $@6 tLPAR params tRPAR tLBRACE • instructions tRBRACE

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 37


State 24

   35 params: tINT tID tCOMMA params •

    $default  reduce using rule 35 (params)


State 25

   36 params: tVOID tID tCOMMA params •

    $default  reduce using rule 36 (params)


State 26

   14 int_declaration: tINT • int_declaration tSEMI
   15                | tINT • int_declaration tASSIGN arith tSEMI

    tINT  shift, and go to state 26
    tID   shift, and go to state 38

    int_declaration  go to state 39


State 27

    7 if_statement: tIF • $@1 tLPAR expression tRPAR tLBRACE instructions tRBRACE

    $default  reduce using rule 6 ($@1)

    $@1  go to state 40


State 28

   11 while_statement: tWHILE • $@3 tLPAR expression tRPAR tLBRACE instructions tRBRACE

    $default  reduce using rule 10 ($@3)

    $@3  go to state 41


State 29

    5 print_statement: tPRINT • expression tSEMI
   12                | tPRINT • tLPAR tID tRPAR tSEMI
   13                | tPRINT • tLPAR tNB tRPAR tSEMI

    tLPAR  shift, and go to state 42
    tID    shift, and go to state 43
    tNB    shift, and go to state 44

    expression  go to state 45


State 30

   17 int_declaration: tID • $@4 tCOMMA int_declaration
   18                | tID •
   19 int_assignment: tID • tASSIGN arith tSEMI

    tASSIGN  shift, and go to state 46

    tCOMMA    reduce using rule 16 ($@4)
    $default  reduce using rule 18 (int_declaration)

    $@4  go to state 47


State 31

   26 instructions: print_statement •
   31             | print_statement • instructions

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    $default  reduce using rule 26 (instructions)

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 48


State 32

    9 if_statement: if_statement • tELSE $@2 tLBRACE instructions tRBRACE
   24 instructions: if_statement •
   29             | if_statement • instructions

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tELSE   shift, and go to state 49
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    $default  reduce using rule 24 (instructions)

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 50


State 33

   25 instructions: while_statement •
   30             | while_statement • instructions

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    $default  reduce using rule 25 (instructions)

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 51


State 34

   27 instructions: int_declaration •
   32             | int_declaration • instructions

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    $default  reduce using rule 27 (instructions)

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 52


State 35

   28 instructions: int_assignment •
   33             | int_assignment • instructions

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    $default  reduce using rule 28 (instructions)

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 53


State 36

   21 fonc_declaration: tINT tID $@5 tLPAR params tRPAR tLBRACE instructions • return_statement tRBRACE

    tRETURN  shift, and go to state 54

    return_statement  go to state 55


State 37

   23 fonc_declaration: tVOID tID $@6 tLPAR params tRPAR tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 56


State 38

   17 int_declaration: tID • $@4 tCOMMA int_declaration
   18                | tID •

    tCOMMA    reduce using rule 16 ($@4)
    $default  reduce using rule 18 (int_declaration)

    $@4  go to state 47


State 39

   14 int_declaration: tINT int_declaration • tSEMI
   15                | tINT int_declaration • tASSIGN arith tSEMI

    tSEMI    shift, and go to state 57
    tASSIGN  shift, and go to state 58


State 40

    7 if_statement: tIF $@1 • tLPAR expression tRPAR tLBRACE instructions tRBRACE

    tLPAR  shift, and go to state 59


State 41

   11 while_statement: tWHILE $@3 • tLPAR expression tRPAR tLBRACE instructions tRBRACE

    tLPAR  shift, and go to state 60


State 42

   12 print_statement: tPRINT tLPAR • tID tRPAR tSEMI
   13                | tPRINT tLPAR • tNB tRPAR tSEMI

    tID  shift, and go to state 61
    tNB  shift, and go to state 62


State 43

   53 expression: tID •

    $default  reduce using rule 53 (expression)


State 44

   54 expression: tNB •

    $default  reduce using rule 54 (expression)


State 45

    5 print_statement: tPRINT expression • tSEMI
   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    tEQ     shift, and go to state 63
    tSEMI   shift, and go to state 64
    tLT     shift, and go to state 65
    tGT     shift, and go to state 66
    tNE     shift, and go to state 67
    tGE     shift, and go to state 68
    tLE     shift, and go to state 69
    tCOMMA  shift, and go to state 70


State 46

   19 int_assignment: tID tASSIGN • arith tSEMI

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 73


State 47

   17 int_declaration: tID $@4 • tCOMMA int_declaration

    tCOMMA  shift, and go to state 74


State 48

   31 instructions: print_statement instructions •

    $default  reduce using rule 31 (instructions)


State 49

    9 if_statement: if_statement tELSE • $@2 tLBRACE instructions tRBRACE

    $default  reduce using rule 8 ($@2)

    $@2  go to state 75


State 50

   29 instructions: if_statement instructions •

    $default  reduce using rule 29 (instructions)


State 51

   30 instructions: while_statement instructions •

    $default  reduce using rule 30 (instructions)


State 52

   32 instructions: int_declaration instructions •

    $default  reduce using rule 32 (instructions)


State 53

   33 instructions: int_assignment instructions •

    $default  reduce using rule 33 (instructions)


State 54

    3 return_statement: tRETURN • tNB tSEMI
    4                 | tRETURN • tID tSEMI

    tID  shift, and go to state 76
    tNB  shift, and go to state 77


State 55

   21 fonc_declaration: tINT tID $@5 tLPAR params tRPAR tLBRACE instructions return_statement • tRBRACE

    tRBRACE  shift, and go to state 78


State 56

   23 fonc_declaration: tVOID tID $@6 tLPAR params tRPAR tLBRACE instructions tRBRACE •

    $default  reduce using rule 23 (fonc_declaration)


State 57

   14 int_declaration: tINT int_declaration tSEMI •

    $default  reduce using rule 14 (int_declaration)


State 58

   15 int_declaration: tINT int_declaration tASSIGN • arith tSEMI

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 79


State 59

    7 if_statement: tIF $@1 tLPAR • expression tRPAR tLBRACE instructions tRBRACE

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 80


State 60

   11 while_statement: tWHILE $@3 tLPAR • expression tRPAR tLBRACE instructions tRBRACE

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 81


State 61

   12 print_statement: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 82


State 62

   13 print_statement: tPRINT tLPAR tNB • tRPAR tSEMI

    tRPAR  shift, and go to state 83


State 63

   46 expression: expression tEQ • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 84


State 64

    5 print_statement: tPRINT expression tSEMI •

    $default  reduce using rule 5 (print_statement)


State 65

   51 expression: expression tLT • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 85


State 66

   52 expression: expression tGT • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 86


State 67

   50 expression: expression tNE • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 87


State 68

   49 expression: expression tGE • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 88


State 69

   48 expression: expression tLE • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 89


State 70

   47 expression: expression tCOMMA • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 90


State 71

   43 arith: tID •
   44      | tID • tLPAR args tRPAR

    tLPAR  shift, and go to state 91

    $default  reduce using rule 43 (arith)


State 72

   45 arith: tNB •

    $default  reduce using rule 45 (arith)


State 73

   19 int_assignment: tID tASSIGN arith • tSEMI
   39 arith: arith • tADD arith
   40      | arith • tSUB arith
   41      | arith • tMUL arith
   42      | arith • tDIV arith

    tADD   shift, and go to state 92
    tSUB   shift, and go to state 93
    tSEMI  shift, and go to state 94
    tMUL   shift, and go to state 95
    tDIV   shift, and go to state 96


State 74

   17 int_declaration: tID $@4 tCOMMA • int_declaration

    tINT  shift, and go to state 26
    tID   shift, and go to state 38

    int_declaration  go to state 97


State 75

    9 if_statement: if_statement tELSE $@2 • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 98


State 76

    4 return_statement: tRETURN tID • tSEMI

    tSEMI  shift, and go to state 99


State 77

    3 return_statement: tRETURN tNB • tSEMI

    tSEMI  shift, and go to state 100


State 78

   21 fonc_declaration: tINT tID $@5 tLPAR params tRPAR tLBRACE instructions return_statement tRBRACE •

    $default  reduce using rule 21 (fonc_declaration)


State 79

   15 int_declaration: tINT int_declaration tASSIGN arith • tSEMI
   39 arith: arith • tADD arith
   40      | arith • tSUB arith
   41      | arith • tMUL arith
   42      | arith • tDIV arith

    tADD   shift, and go to state 92
    tSUB   shift, and go to state 93
    tSEMI  shift, and go to state 101
    tMUL   shift, and go to state 95
    tDIV   shift, and go to state 96


State 80

    7 if_statement: tIF $@1 tLPAR expression • tRPAR tLBRACE instructions tRBRACE
   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    tEQ     shift, and go to state 63
    tRPAR   shift, and go to state 102
    tLT     shift, and go to state 65
    tGT     shift, and go to state 66
    tNE     shift, and go to state 67
    tGE     shift, and go to state 68
    tLE     shift, and go to state 69
    tCOMMA  shift, and go to state 70


State 81

   11 while_statement: tWHILE $@3 tLPAR expression • tRPAR tLBRACE instructions tRBRACE
   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    tEQ     shift, and go to state 63
    tRPAR   shift, and go to state 103
    tLT     shift, and go to state 65
    tGT     shift, and go to state 66
    tNE     shift, and go to state 67
    tGE     shift, and go to state 68
    tLE     shift, and go to state 69
    tCOMMA  shift, and go to state 70


State 82

   12 print_statement: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 104


State 83

   13 print_statement: tPRINT tLPAR tNB tRPAR • tSEMI

    tSEMI  shift, and go to state 105


State 84

   46 expression: expression • tEQ expression
   46           | expression tEQ expression •
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    tCOMMA  shift, and go to state 70

    $default  reduce using rule 46 (expression)


State 85

   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   51           | expression tLT expression •
   52           | expression • tGT expression

    tCOMMA  shift, and go to state 70

    $default  reduce using rule 51 (expression)


State 86

   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression
   52           | expression tGT expression •

    tCOMMA  shift, and go to state 70

    $default  reduce using rule 52 (expression)


State 87

   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   50           | expression tNE expression •
   51           | expression • tLT expression
   52           | expression • tGT expression

    tCOMMA  shift, and go to state 70

    $default  reduce using rule 50 (expression)


State 88

   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   49           | expression • tGE expression
   49           | expression tGE expression •
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    tCOMMA  shift, and go to state 70

    $default  reduce using rule 49 (expression)


State 89

   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   48           | expression • tLE expression
   48           | expression tLE expression •
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    tCOMMA  shift, and go to state 70

    $default  reduce using rule 48 (expression)


State 90

   46 expression: expression • tEQ expression
   47           | expression • tCOMMA expression
   47           | expression tCOMMA expression •
   48           | expression • tLE expression
   49           | expression • tGE expression
   50           | expression • tNE expression
   51           | expression • tLT expression
   52           | expression • tGT expression

    $default  reduce using rule 47 (expression)


State 91

   44 arith: tID tLPAR • args tRPAR

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 106
    args   go to state 107


State 92

   39 arith: arith tADD • arith

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 108


State 93

   40 arith: arith tSUB • arith

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 109


State 94

   19 int_assignment: tID tASSIGN arith tSEMI •

    $default  reduce using rule 19 (int_assignment)


State 95

   41 arith: arith tMUL • arith

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 110


State 96

   42 arith: arith tDIV • arith

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 111


State 97

   17 int_declaration: tID $@4 tCOMMA int_declaration •

    $default  reduce using rule 17 (int_declaration)


State 98

    9 if_statement: if_statement tELSE $@2 tLBRACE • instructions tRBRACE

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 112


State 99

    4 return_statement: tRETURN tID tSEMI •

    $default  reduce using rule 4 (return_statement)


State 100

    3 return_statement: tRETURN tNB tSEMI •

    $default  reduce using rule 3 (return_statement)


State 101

   15 int_declaration: tINT int_declaration tASSIGN arith tSEMI •

    $default  reduce using rule 15 (int_declaration)


State 102

    7 if_statement: tIF $@1 tLPAR expression tRPAR • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 113


State 103

   11 while_statement: tWHILE $@3 tLPAR expression tRPAR • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 114


State 104

   12 print_statement: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 12 (print_statement)


State 105

   13 print_statement: tPRINT tLPAR tNB tRPAR tSEMI •

    $default  reduce using rule 13 (print_statement)


State 106

   39 arith: arith • tADD arith
   40      | arith • tSUB arith
   41      | arith • tMUL arith
   42      | arith • tDIV arith
   55 args: arith •
   56     | arith • tCOMMA args

    tADD    shift, and go to state 92
    tSUB    shift, and go to state 93
    tMUL    shift, and go to state 95
    tDIV    shift, and go to state 96
    tCOMMA  shift, and go to state 115

    $default  reduce using rule 55 (args)


State 107

   44 arith: tID tLPAR args • tRPAR

    tRPAR  shift, and go to state 116


State 108

   39 arith: arith • tADD arith
   39      | arith tADD arith •
   40      | arith • tSUB arith
   41      | arith • tMUL arith
   42      | arith • tDIV arith

    tMUL  shift, and go to state 95
    tDIV  shift, and go to state 96

    $default  reduce using rule 39 (arith)


State 109

   39 arith: arith • tADD arith
   40      | arith • tSUB arith
   40      | arith tSUB arith •
   41      | arith • tMUL arith
   42      | arith • tDIV arith

    tMUL  shift, and go to state 95
    tDIV  shift, and go to state 96

    $default  reduce using rule 40 (arith)


State 110

   39 arith: arith • tADD arith
   40      | arith • tSUB arith
   41      | arith • tMUL arith
   41      | arith tMUL arith •
   42      | arith • tDIV arith

    $default  reduce using rule 41 (arith)


State 111

   39 arith: arith • tADD arith
   40      | arith • tSUB arith
   41      | arith • tMUL arith
   42      | arith • tDIV arith
   42      | arith tDIV arith •

    $default  reduce using rule 42 (arith)


State 112

    9 if_statement: if_statement tELSE $@2 tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 117


State 113

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE • instructions tRBRACE

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 118


State 114

   11 while_statement: tWHILE $@3 tLPAR expression tRPAR tLBRACE • instructions tRBRACE

    tINT    shift, and go to state 26
    tIF     shift, and go to state 27
    tWHILE  shift, and go to state 28
    tPRINT  shift, and go to state 29
    tID     shift, and go to state 30

    print_statement  go to state 31
    if_statement     go to state 32
    while_statement  go to state 33
    int_declaration  go to state 34
    int_assignment   go to state 35
    instructions     go to state 119


State 115

   56 args: arith tCOMMA • args

    tID  shift, and go to state 71
    tNB  shift, and go to state 72

    arith  go to state 106
    args   go to state 120


State 116

   44 arith: tID tLPAR args tRPAR •

    $default  reduce using rule 44 (arith)


State 117

    9 if_statement: if_statement tELSE $@2 tLBRACE instructions tRBRACE •

    $default  reduce using rule 9 (if_statement)


State 118

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 121


State 119

   11 while_statement: tWHILE $@3 tLPAR expression tRPAR tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 122


State 120

   56 args: arith tCOMMA args •

    $default  reduce using rule 56 (args)


State 121

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE instructions tRBRACE •

    $default  reduce using rule 7 (if_statement)


State 122

   11 while_statement: tWHILE $@3 tLPAR expression tRPAR tLBRACE instructions tRBRACE •

    $default  reduce using rule 11 (while_statement)
