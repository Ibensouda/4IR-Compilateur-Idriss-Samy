Terminals unused in grammar

    tAND
    tOR
    tNOT
    tERROR


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program fonc_declaration

    3 return_statement: tRETURN arith tSEMI

    4 print_statement: tPRINT expression tSEMI

    5 $@1: ε

    6 $@2: ε

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE $@2 instructions tRBRACE

    8 $@3: ε

    9 if_statement: if_statement tELSE $@3 tLBRACE instructions tRBRACE

   10 $@4: ε

   11 $@5: ε

   12 while_statement: tWHILE $@4 tLPAR expression tRPAR tLBRACE $@5 instructions tRBRACE

   13 print_statement: tPRINT tLPAR tID tRPAR tSEMI

   14 int_declaration: tINT int_declaration
   15                | tID

   16 $@6: ε

   17 int_declaration: tID $@6 tASSIGN arith

   18 $@7: ε

   19 int_declaration: tID tCOMMA $@7 int_declaration

   20 $@8: ε

   21 fonc_declaration: tINT tID $@8 tLPAR params tRPAR tLBRACE instructions tRBRACE

   22 $@9: ε

   23 fonc_declaration: tVOID tID $@9 tLPAR params tRPAR tLBRACE instructions tRBRACE

   24 instructions: if_statement instructions
   25             | while_statement instructions
   26             | print_statement instructions
   27             | int_declaration tSEMI instructions
   28             | return_statement

   29 params: tVOID
   30       | tINT tID tCOMMA params
   31       | tVOID tID tCOMMA params
   32       | tINT tID
   33       | tVOID tID

   34 arith: arith tADD arith
   35      | arith tSUB arith
   36      | arith tMUL arith
   37      | arith tDIV arith
   38      | tID
   39      | tID tLPAR args tRPAR
   40      | tNB

   41 expression: expression tEQ expression
   42           | expression tCOMMA expression
   43           | expression tLE expression
   44           | expression tGE expression
   45           | expression tNE expression
   46           | expression tLT expression
   47           | expression tGT expression
   48           | tID
   49           | tNB

   50 args: arith
   51     | arith tCOMMA args


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tINT (258) 14 21 30 32
    tIF (259) 7
    tWHILE (260) 12
    tELSE (261) 9
    tADD (262) 34
    tSUB (263) 35
    tEQ (264) 41
    tLBRACE (265) 7 9 12 21 23
    tRBRACE (266) 7 9 12 21 23
    tLPAR (267) 7 12 13 21 23 39
    tRPAR (268) 7 12 13 21 23 39
    tSEMI (269) 3 4 13 27
    tPRINT (270) 4 13
    tRETURN (271) 3
    tVOID (272) 23 29 31 33
    tMUL (273) 36
    tDIV (274) 37
    tLT (275) 46
    tGT (276) 47
    tNE (277) 45
    tGE (278) 44
    tLE (279) 43
    tASSIGN (280) 17
    tAND (281)
    tOR (282)
    tNOT (283)
    tCOMMA (284) 19 30 31 42 51
    tERROR (285)
    tID <s> (286) 13 15 17 19 21 23 30 31 32 33 38 39 48
    tNB <n> (287) 40 49


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program (34)
        on left: 1 2
        on right: 0 2
    return_statement (35)
        on left: 3
        on right: 28
    print_statement (36)
        on left: 4 13
        on right: 26
    if_statement (37)
        on left: 7 9
        on right: 9 24
    $@1 (38)
        on left: 5
        on right: 7
    $@2 (39)
        on left: 6
        on right: 7
    $@3 (40)
        on left: 8
        on right: 9
    while_statement (41)
        on left: 12
        on right: 25
    $@4 (42)
        on left: 10
        on right: 12
    $@5 (43)
        on left: 11
        on right: 12
    int_declaration (44)
        on left: 14 15 17 19
        on right: 14 19 27
    $@6 (45)
        on left: 16
        on right: 17
    $@7 (46)
        on left: 18
        on right: 19
    fonc_declaration (47)
        on left: 21 23
        on right: 2
    $@8 (48)
        on left: 20
        on right: 21
    $@9 (49)
        on left: 22
        on right: 23
    instructions (50)
        on left: 24 25 26 27 28
        on right: 7 9 12 21 23 24 25 26 27
    params (51)
        on left: 29 30 31 32 33
        on right: 21 23 30 31
    arith (52)
        on left: 34 35 36 37 38 39 40
        on right: 3 17 34 35 36 37 50 51
    expression (53)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 4 7 12 41 42 43 44 45 46 47
    args (54)
        on left: 50 51
        on right: 39 51


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • fonc_declaration

    $end   shift, and go to state 2
    tINT   shift, and go to state 3
    tVOID  shift, and go to state 4

    fonc_declaration  go to state 5


State 2

    0 $accept: program $end •

    $default  accept


State 3

   21 fonc_declaration: tINT • tID $@8 tLPAR params tRPAR tLBRACE instructions tRBRACE

    tID  shift, and go to state 6


State 4

   23 fonc_declaration: tVOID • tID $@9 tLPAR params tRPAR tLBRACE instructions tRBRACE

    tID  shift, and go to state 7


State 5

    2 program: program fonc_declaration •

    $default  reduce using rule 2 (program)


State 6

   21 fonc_declaration: tINT tID • $@8 tLPAR params tRPAR tLBRACE instructions tRBRACE

    $default  reduce using rule 20 ($@8)

    $@8  go to state 8


State 7

   23 fonc_declaration: tVOID tID • $@9 tLPAR params tRPAR tLBRACE instructions tRBRACE

    $default  reduce using rule 22 ($@9)

    $@9  go to state 9


State 8

   21 fonc_declaration: tINT tID $@8 • tLPAR params tRPAR tLBRACE instructions tRBRACE

    tLPAR  shift, and go to state 10


State 9

   23 fonc_declaration: tVOID tID $@9 • tLPAR params tRPAR tLBRACE instructions tRBRACE

    tLPAR  shift, and go to state 11


State 10

   21 fonc_declaration: tINT tID $@8 tLPAR • params tRPAR tLBRACE instructions tRBRACE

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 14


State 11

   23 fonc_declaration: tVOID tID $@9 tLPAR • params tRPAR tLBRACE instructions tRBRACE

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 15


State 12

   30 params: tINT • tID tCOMMA params
   32       | tINT • tID

    tID  shift, and go to state 16


State 13

   29 params: tVOID •
   31       | tVOID • tID tCOMMA params
   33       | tVOID • tID

    tID  shift, and go to state 17

    $default  reduce using rule 29 (params)


State 14

   21 fonc_declaration: tINT tID $@8 tLPAR params • tRPAR tLBRACE instructions tRBRACE

    tRPAR  shift, and go to state 18


State 15

   23 fonc_declaration: tVOID tID $@9 tLPAR params • tRPAR tLBRACE instructions tRBRACE

    tRPAR  shift, and go to state 19


State 16

   30 params: tINT tID • tCOMMA params
   32       | tINT tID •

    tCOMMA  shift, and go to state 20

    $default  reduce using rule 32 (params)


State 17

   31 params: tVOID tID • tCOMMA params
   33       | tVOID tID •

    tCOMMA  shift, and go to state 21

    $default  reduce using rule 33 (params)


State 18

   21 fonc_declaration: tINT tID $@8 tLPAR params tRPAR • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 22


State 19

   23 fonc_declaration: tVOID tID $@9 tLPAR params tRPAR • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 23


State 20

   30 params: tINT tID tCOMMA • params

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 24


State 21

   31 params: tVOID tID tCOMMA • params

    tINT   shift, and go to state 12
    tVOID  shift, and go to state 13

    params  go to state 25


State 22

   21 fonc_declaration: tINT tID $@8 tLPAR params tRPAR tLBRACE • instructions tRBRACE

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 37


State 23

   23 fonc_declaration: tVOID tID $@9 tLPAR params tRPAR tLBRACE • instructions tRBRACE

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 38


State 24

   30 params: tINT tID tCOMMA params •

    $default  reduce using rule 30 (params)


State 25

   31 params: tVOID tID tCOMMA params •

    $default  reduce using rule 31 (params)


State 26

   14 int_declaration: tINT • int_declaration

    tINT  shift, and go to state 26
    tID   shift, and go to state 31

    int_declaration  go to state 39


State 27

    7 if_statement: tIF • $@1 tLPAR expression tRPAR tLBRACE $@2 instructions tRBRACE

    $default  reduce using rule 5 ($@1)

    $@1  go to state 40


State 28

   12 while_statement: tWHILE • $@4 tLPAR expression tRPAR tLBRACE $@5 instructions tRBRACE

    $default  reduce using rule 10 ($@4)

    $@4  go to state 41


State 29

    4 print_statement: tPRINT • expression tSEMI
   13                | tPRINT • tLPAR tID tRPAR tSEMI

    tLPAR  shift, and go to state 42
    tID    shift, and go to state 43
    tNB    shift, and go to state 44

    expression  go to state 45


State 30

    3 return_statement: tRETURN • arith tSEMI

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 48


State 31

   15 int_declaration: tID •
   17                | tID • $@6 tASSIGN arith
   19                | tID • tCOMMA $@7 int_declaration

    tCOMMA  shift, and go to state 49

    tASSIGN   reduce using rule 16 ($@6)
    $default  reduce using rule 15 (int_declaration)

    $@6  go to state 50


State 32

   28 instructions: return_statement •

    $default  reduce using rule 28 (instructions)


State 33

   26 instructions: print_statement • instructions

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 51


State 34

    9 if_statement: if_statement • tELSE $@3 tLBRACE instructions tRBRACE
   24 instructions: if_statement • instructions

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tELSE    shift, and go to state 52
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 53


State 35

   25 instructions: while_statement • instructions

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 54


State 36

   27 instructions: int_declaration • tSEMI instructions

    tSEMI  shift, and go to state 55


State 37

   21 fonc_declaration: tINT tID $@8 tLPAR params tRPAR tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 56


State 38

   23 fonc_declaration: tVOID tID $@9 tLPAR params tRPAR tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 57


State 39

   14 int_declaration: tINT int_declaration •

    $default  reduce using rule 14 (int_declaration)


State 40

    7 if_statement: tIF $@1 • tLPAR expression tRPAR tLBRACE $@2 instructions tRBRACE

    tLPAR  shift, and go to state 58


State 41

   12 while_statement: tWHILE $@4 • tLPAR expression tRPAR tLBRACE $@5 instructions tRBRACE

    tLPAR  shift, and go to state 59


State 42

   13 print_statement: tPRINT tLPAR • tID tRPAR tSEMI

    tID  shift, and go to state 60


State 43

   48 expression: tID •

    $default  reduce using rule 48 (expression)


State 44

   49 expression: tNB •

    $default  reduce using rule 49 (expression)


State 45

    4 print_statement: tPRINT expression • tSEMI
   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    tEQ     shift, and go to state 61
    tSEMI   shift, and go to state 62
    tLT     shift, and go to state 63
    tGT     shift, and go to state 64
    tNE     shift, and go to state 65
    tGE     shift, and go to state 66
    tLE     shift, and go to state 67
    tCOMMA  shift, and go to state 68


State 46

   38 arith: tID •
   39      | tID • tLPAR args tRPAR

    tLPAR  shift, and go to state 69

    $default  reduce using rule 38 (arith)


State 47

   40 arith: tNB •

    $default  reduce using rule 40 (arith)


State 48

    3 return_statement: tRETURN arith • tSEMI
   34 arith: arith • tADD arith
   35      | arith • tSUB arith
   36      | arith • tMUL arith
   37      | arith • tDIV arith

    tADD   shift, and go to state 70
    tSUB   shift, and go to state 71
    tSEMI  shift, and go to state 72
    tMUL   shift, and go to state 73
    tDIV   shift, and go to state 74


State 49

   19 int_declaration: tID tCOMMA • $@7 int_declaration

    $default  reduce using rule 18 ($@7)

    $@7  go to state 75


State 50

   17 int_declaration: tID $@6 • tASSIGN arith

    tASSIGN  shift, and go to state 76


State 51

   26 instructions: print_statement instructions •

    $default  reduce using rule 26 (instructions)


State 52

    9 if_statement: if_statement tELSE • $@3 tLBRACE instructions tRBRACE

    $default  reduce using rule 8 ($@3)

    $@3  go to state 77


State 53

   24 instructions: if_statement instructions •

    $default  reduce using rule 24 (instructions)


State 54

   25 instructions: while_statement instructions •

    $default  reduce using rule 25 (instructions)


State 55

   27 instructions: int_declaration tSEMI • instructions

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 78


State 56

   21 fonc_declaration: tINT tID $@8 tLPAR params tRPAR tLBRACE instructions tRBRACE •

    $default  reduce using rule 21 (fonc_declaration)


State 57

   23 fonc_declaration: tVOID tID $@9 tLPAR params tRPAR tLBRACE instructions tRBRACE •

    $default  reduce using rule 23 (fonc_declaration)


State 58

    7 if_statement: tIF $@1 tLPAR • expression tRPAR tLBRACE $@2 instructions tRBRACE

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 79


State 59

   12 while_statement: tWHILE $@4 tLPAR • expression tRPAR tLBRACE $@5 instructions tRBRACE

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 80


State 60

   13 print_statement: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 81


State 61

   41 expression: expression tEQ • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 82


State 62

    4 print_statement: tPRINT expression tSEMI •

    $default  reduce using rule 4 (print_statement)


State 63

   46 expression: expression tLT • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 83


State 64

   47 expression: expression tGT • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 84


State 65

   45 expression: expression tNE • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 85


State 66

   44 expression: expression tGE • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 86


State 67

   43 expression: expression tLE • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 87


State 68

   42 expression: expression tCOMMA • expression

    tID  shift, and go to state 43
    tNB  shift, and go to state 44

    expression  go to state 88


State 69

   39 arith: tID tLPAR • args tRPAR

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 89
    args   go to state 90


State 70

   34 arith: arith tADD • arith

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 91


State 71

   35 arith: arith tSUB • arith

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 92


State 72

    3 return_statement: tRETURN arith tSEMI •

    $default  reduce using rule 3 (return_statement)


State 73

   36 arith: arith tMUL • arith

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 93


State 74

   37 arith: arith tDIV • arith

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 94


State 75

   19 int_declaration: tID tCOMMA $@7 • int_declaration

    tINT  shift, and go to state 26
    tID   shift, and go to state 31

    int_declaration  go to state 95


State 76

   17 int_declaration: tID $@6 tASSIGN • arith

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 96


State 77

    9 if_statement: if_statement tELSE $@3 • tLBRACE instructions tRBRACE

    tLBRACE  shift, and go to state 97


State 78

   27 instructions: int_declaration tSEMI instructions •

    $default  reduce using rule 27 (instructions)


State 79

    7 if_statement: tIF $@1 tLPAR expression • tRPAR tLBRACE $@2 instructions tRBRACE
   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    tEQ     shift, and go to state 61
    tRPAR   shift, and go to state 98
    tLT     shift, and go to state 63
    tGT     shift, and go to state 64
    tNE     shift, and go to state 65
    tGE     shift, and go to state 66
    tLE     shift, and go to state 67
    tCOMMA  shift, and go to state 68


State 80

   12 while_statement: tWHILE $@4 tLPAR expression • tRPAR tLBRACE $@5 instructions tRBRACE
   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    tEQ     shift, and go to state 61
    tRPAR   shift, and go to state 99
    tLT     shift, and go to state 63
    tGT     shift, and go to state 64
    tNE     shift, and go to state 65
    tGE     shift, and go to state 66
    tLE     shift, and go to state 67
    tCOMMA  shift, and go to state 68


State 81

   13 print_statement: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 100


State 82

   41 expression: expression • tEQ expression
   41           | expression tEQ expression •
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    tCOMMA  shift, and go to state 68

    $default  reduce using rule 41 (expression)


State 83

   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   46           | expression tLT expression •
   47           | expression • tGT expression

    tCOMMA  shift, and go to state 68

    $default  reduce using rule 46 (expression)


State 84

   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression
   47           | expression tGT expression •

    tCOMMA  shift, and go to state 68

    $default  reduce using rule 47 (expression)


State 85

   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   45           | expression tNE expression •
   46           | expression • tLT expression
   47           | expression • tGT expression

    tCOMMA  shift, and go to state 68

    $default  reduce using rule 45 (expression)


State 86

   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   44           | expression • tGE expression
   44           | expression tGE expression •
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    tCOMMA  shift, and go to state 68

    $default  reduce using rule 44 (expression)


State 87

   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   43           | expression • tLE expression
   43           | expression tLE expression •
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    tCOMMA  shift, and go to state 68

    $default  reduce using rule 43 (expression)


State 88

   41 expression: expression • tEQ expression
   42           | expression • tCOMMA expression
   42           | expression tCOMMA expression •
   43           | expression • tLE expression
   44           | expression • tGE expression
   45           | expression • tNE expression
   46           | expression • tLT expression
   47           | expression • tGT expression

    $default  reduce using rule 42 (expression)


State 89

   34 arith: arith • tADD arith
   35      | arith • tSUB arith
   36      | arith • tMUL arith
   37      | arith • tDIV arith
   50 args: arith •
   51     | arith • tCOMMA args

    tADD    shift, and go to state 70
    tSUB    shift, and go to state 71
    tMUL    shift, and go to state 73
    tDIV    shift, and go to state 74
    tCOMMA  shift, and go to state 101

    $default  reduce using rule 50 (args)


State 90

   39 arith: tID tLPAR args • tRPAR

    tRPAR  shift, and go to state 102


State 91

   34 arith: arith • tADD arith
   34      | arith tADD arith •
   35      | arith • tSUB arith
   36      | arith • tMUL arith
   37      | arith • tDIV arith

    tMUL  shift, and go to state 73
    tDIV  shift, and go to state 74

    $default  reduce using rule 34 (arith)


State 92

   34 arith: arith • tADD arith
   35      | arith • tSUB arith
   35      | arith tSUB arith •
   36      | arith • tMUL arith
   37      | arith • tDIV arith

    tMUL  shift, and go to state 73
    tDIV  shift, and go to state 74

    $default  reduce using rule 35 (arith)


State 93

   34 arith: arith • tADD arith
   35      | arith • tSUB arith
   36      | arith • tMUL arith
   36      | arith tMUL arith •
   37      | arith • tDIV arith

    $default  reduce using rule 36 (arith)


State 94

   34 arith: arith • tADD arith
   35      | arith • tSUB arith
   36      | arith • tMUL arith
   37      | arith • tDIV arith
   37      | arith tDIV arith •

    $default  reduce using rule 37 (arith)


State 95

   19 int_declaration: tID tCOMMA $@7 int_declaration •

    $default  reduce using rule 19 (int_declaration)


State 96

   17 int_declaration: tID $@6 tASSIGN arith •
   34 arith: arith • tADD arith
   35      | arith • tSUB arith
   36      | arith • tMUL arith
   37      | arith • tDIV arith

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71
    tMUL  shift, and go to state 73
    tDIV  shift, and go to state 74

    $default  reduce using rule 17 (int_declaration)


State 97

    9 if_statement: if_statement tELSE $@3 tLBRACE • instructions tRBRACE

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 103


State 98

    7 if_statement: tIF $@1 tLPAR expression tRPAR • tLBRACE $@2 instructions tRBRACE

    tLBRACE  shift, and go to state 104


State 99

   12 while_statement: tWHILE $@4 tLPAR expression tRPAR • tLBRACE $@5 instructions tRBRACE

    tLBRACE  shift, and go to state 105


State 100

   13 print_statement: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 13 (print_statement)


State 101

   51 args: arith tCOMMA • args

    tID  shift, and go to state 46
    tNB  shift, and go to state 47

    arith  go to state 89
    args   go to state 106


State 102

   39 arith: tID tLPAR args tRPAR •

    $default  reduce using rule 39 (arith)


State 103

    9 if_statement: if_statement tELSE $@3 tLBRACE instructions • tRBRACE

    tRBRACE  shift, and go to state 107


State 104

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE • $@2 instructions tRBRACE

    $default  reduce using rule 6 ($@2)

    $@2  go to state 108


State 105

   12 while_statement: tWHILE $@4 tLPAR expression tRPAR tLBRACE • $@5 instructions tRBRACE

    $default  reduce using rule 11 ($@5)

    $@5  go to state 109


State 106

   51 args: arith tCOMMA args •

    $default  reduce using rule 51 (args)


State 107

    9 if_statement: if_statement tELSE $@3 tLBRACE instructions tRBRACE •

    $default  reduce using rule 9 (if_statement)


State 108

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE $@2 • instructions tRBRACE

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 110


State 109

   12 while_statement: tWHILE $@4 tLPAR expression tRPAR tLBRACE $@5 • instructions tRBRACE

    tINT     shift, and go to state 26
    tIF      shift, and go to state 27
    tWHILE   shift, and go to state 28
    tPRINT   shift, and go to state 29
    tRETURN  shift, and go to state 30
    tID      shift, and go to state 31

    return_statement  go to state 32
    print_statement   go to state 33
    if_statement      go to state 34
    while_statement   go to state 35
    int_declaration   go to state 36
    instructions      go to state 111


State 110

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE $@2 instructions • tRBRACE

    tRBRACE  shift, and go to state 112


State 111

   12 while_statement: tWHILE $@4 tLPAR expression tRPAR tLBRACE $@5 instructions • tRBRACE

    tRBRACE  shift, and go to state 113


State 112

    7 if_statement: tIF $@1 tLPAR expression tRPAR tLBRACE $@2 instructions tRBRACE •

    $default  reduce using rule 7 (if_statement)


State 113

   12 while_statement: tWHILE $@4 tLPAR expression tRPAR tLBRACE $@5 instructions tRBRACE •

    $default  reduce using rule 12 (while_statement)
